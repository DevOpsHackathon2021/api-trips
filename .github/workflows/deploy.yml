name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDS }}
    
    - name: Build app in ACR and push
      run: |
        echo "Building API-USER-GO image..."
        az acr build --image "devopsoh/api-trips:${{ github.sha }}" --registry openhackx6e34ru4acr --file Dockerfile .

  deployStaging:
      if: success()    # Deploy only when build was successful
      needs: build     # Wait for deploy
      runs-on: ubuntu-latest
      
      env:
        ACRNAME: 'openhackx6e34ru4acr'
        IMAGETAG: ${{ github.sha }}
        WEBAPP: openhackx6e34ru4trips
        
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Login to Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDS }}
            
        - name: Deploy to STAGING Azure WebApp
          uses: Azure/webapps-deploy@v2
          with:
            app-name: ${{ env.WEBAPP }}
            slot-name: staging
            images: "${{ env.ACRNAME }}.azurecr.io/devopsoh/api-trips:${{ env.IMAGETAG }}"
    
        - name: Test health
          run: |
            chmod +x ./polling.sh
            ./polling.sh -i ${WEBAPP}-staging.azurewebsites.net/api/healthcheck/trips
        - uses: nashmaniac/create-issue-action@v1.1
          name: Create Issue Action
          if: ${{ failure() }}
          with:
            title: Deployment to staging failed healthcheck
            token: ${{secrets.GITHUB_TOKEN}}
            assignees: ${{github.actor}}
            labels: worflow-failed
            body: Deployment to staging failed healthcheck for commit ${{github.sha}}

  deployProduction:
      if: success()             # Deploy only when staging deploy and health check was successful
      needs: deployStaging      # Wait for deploy
      runs-on: ubuntu-latest
      
      env:
        ACRNAME: 'openhackx6e34ru4acr'
        IMAGETAG: ${{ github.sha }}
        WEBAPP: openhackx6e34ru4trips
        WEBAPP_RG: openhackx6e34ru4rg
        
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Login to Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDS }}

        - name: Swap STAGING to PRODUCTION in Azure WebApp
          if: ${{ success() }}
          run: az webapp deployment slot swap -s staging --target-slot production -n $WEBAPP -g $WEBAPP_RG
    
        - name: Test health
          run: |
            chmod +x ./polling.sh
            ./polling.sh -i ${WEBAPP}.azurewebsites.net/api/healthcheck/trips